// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schedule/adapter/local/localpb/local.proto

package local

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A Partition stores event keys within a specific time range
type Partition struct {
	From                 int64    `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   int64    `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Keys                 []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Partition) Reset()         { *m = Partition{} }
func (m *Partition) String() string { return proto.CompactTextString(m) }
func (*Partition) ProtoMessage()    {}
func (*Partition) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9e98e86040b7bc0, []int{0}
}

func (m *Partition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partition.Unmarshal(m, b)
}
func (m *Partition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partition.Marshal(b, m, deterministic)
}
func (m *Partition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partition.Merge(m, src)
}
func (m *Partition) XXX_Size() int {
	return xxx_messageInfo_Partition.Size(m)
}
func (m *Partition) XXX_DiscardUnknown() {
	xxx_messageInfo_Partition.DiscardUnknown(m)
}

var xxx_messageInfo_Partition proto.InternalMessageInfo

func (m *Partition) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *Partition) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *Partition) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

// Checkpoint stores a time range. It is used to store the last load performed
// as a checkpoint to resume processing where it was left off.
type Checkpoint struct {
	Seq                  uint64   `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	From                 int64    `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   int64    `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Checkpoint) Reset()         { *m = Checkpoint{} }
func (m *Checkpoint) String() string { return proto.CompactTextString(m) }
func (*Checkpoint) ProtoMessage()    {}
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9e98e86040b7bc0, []int{1}
}

func (m *Checkpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checkpoint.Unmarshal(m, b)
}
func (m *Checkpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checkpoint.Marshal(b, m, deterministic)
}
func (m *Checkpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checkpoint.Merge(m, src)
}
func (m *Checkpoint) XXX_Size() int {
	return xxx_messageInfo_Checkpoint.Size(m)
}
func (m *Checkpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Checkpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Checkpoint proto.InternalMessageInfo

func (m *Checkpoint) GetSeq() uint64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *Checkpoint) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *Checkpoint) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

// A Job is a one-time task definition
type Job struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Target               string      `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Due                  int64       `protobuf:"varint,3,opt,name=due,proto3" json:"due,omitempty"`
	Data                 []byte      `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Options              *JobOptions `protobuf:"bytes,14,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9e98e86040b7bc0, []int{2}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Job) GetDue() int64 {
	if m != nil {
		return m.Due
	}
	return 0
}

func (m *Job) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Job) GetOptions() *JobOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

// JobOptions contains job execution options
type JobOptions struct {
	RetryLimit           uint32   `protobuf:"varint,1,opt,name=retryLimit,proto3" json:"retryLimit,omitempty"`
	MinBackOff           int64    `protobuf:"varint,2,opt,name=minBackOff,proto3" json:"minBackOff,omitempty"`
	MaxBackOff           int64    `protobuf:"varint,3,opt,name=maxBackOff,proto3" json:"maxBackOff,omitempty"`
	AgeLimit             int64    `protobuf:"varint,4,opt,name=ageLimit,proto3" json:"ageLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobOptions) Reset()         { *m = JobOptions{} }
func (m *JobOptions) String() string { return proto.CompactTextString(m) }
func (*JobOptions) ProtoMessage()    {}
func (*JobOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9e98e86040b7bc0, []int{3}
}

func (m *JobOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobOptions.Unmarshal(m, b)
}
func (m *JobOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobOptions.Marshal(b, m, deterministic)
}
func (m *JobOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobOptions.Merge(m, src)
}
func (m *JobOptions) XXX_Size() int {
	return xxx_messageInfo_JobOptions.Size(m)
}
func (m *JobOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_JobOptions.DiscardUnknown(m)
}

var xxx_messageInfo_JobOptions proto.InternalMessageInfo

func (m *JobOptions) GetRetryLimit() uint32 {
	if m != nil {
		return m.RetryLimit
	}
	return 0
}

func (m *JobOptions) GetMinBackOff() int64 {
	if m != nil {
		return m.MinBackOff
	}
	return 0
}

func (m *JobOptions) GetMaxBackOff() int64 {
	if m != nil {
		return m.MaxBackOff
	}
	return 0
}

func (m *JobOptions) GetAgeLimit() int64 {
	if m != nil {
		return m.AgeLimit
	}
	return 0
}

// An Event is an occurence of a job executed at a specific time.
// There is one event per job execution.
type Event struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Due                  int64    `protobuf:"varint,2,opt,name=due,proto3" json:"due,omitempty"`
	Attempt              uint32   `protobuf:"varint,3,opt,name=attempt,proto3" json:"attempt,omitempty"`
	Job                  *Job     `protobuf:"bytes,15,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9e98e86040b7bc0, []int{4}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetDue() int64 {
	if m != nil {
		return m.Due
	}
	return 0
}

func (m *Event) GetAttempt() uint32 {
	if m != nil {
		return m.Attempt
	}
	return 0
}

func (m *Event) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func init() {
	proto.RegisterType((*Partition)(nil), "local.Partition")
	proto.RegisterType((*Checkpoint)(nil), "local.Checkpoint")
	proto.RegisterType((*Job)(nil), "local.Job")
	proto.RegisterType((*JobOptions)(nil), "local.JobOptions")
	proto.RegisterType((*Event)(nil), "local.Event")
}

func init() {
	proto.RegisterFile("schedule/adapter/local/localpb/local.proto", fileDescriptor_c9e98e86040b7bc0)
}

var fileDescriptor_c9e98e86040b7bc0 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xcd, 0x4e, 0x83, 0x40,
	0x10, 0x0e, 0x2c, 0x6d, 0x65, 0xb4, 0x55, 0xf7, 0x60, 0x88, 0x31, 0x86, 0x70, 0x22, 0x9a, 0xb4,
	0x89, 0xbe, 0x41, 0x1b, 0x2f, 0x8d, 0x49, 0xcd, 0xbe, 0xc1, 0x02, 0xdb, 0x76, 0x6d, 0x61, 0x11,
	0xa6, 0xc6, 0xde, 0x3c, 0xfa, 0xd8, 0x66, 0x07, 0x68, 0x9b, 0xf4, 0x02, 0xdf, 0xcf, 0xee, 0x37,
	0x7c, 0x13, 0xe0, 0xa9, 0x4e, 0xd7, 0x2a, 0xdb, 0x6d, 0xd5, 0x44, 0x66, 0xb2, 0x44, 0x55, 0x4d,
	0xb6, 0x26, 0x95, 0xdb, 0xe6, 0x59, 0x26, 0xcd, 0x7b, 0x5c, 0x56, 0x06, 0x0d, 0xef, 0x11, 0x89,
	0x66, 0xe0, 0x7f, 0xc8, 0x0a, 0x35, 0x6a, 0x53, 0x70, 0x0e, 0xde, 0xb2, 0x32, 0x79, 0xe0, 0x84,
	0x4e, 0xcc, 0x04, 0x61, 0x3e, 0x02, 0x17, 0x4d, 0xe0, 0x92, 0xe2, 0xa2, 0xb1, 0x67, 0x36, 0x6a,
	0x5f, 0x07, 0x2c, 0x64, 0xb1, 0x2f, 0x08, 0x47, 0x53, 0x80, 0xd9, 0x5a, 0xa5, 0x9b, 0xd2, 0xe8,
	0x02, 0xf9, 0x0d, 0xb0, 0x5a, 0x7d, 0x51, 0x88, 0x27, 0x2c, 0x3c, 0xe4, 0xba, 0x67, 0xb9, 0xac,
	0xcb, 0x8d, 0x7e, 0x1d, 0x60, 0x73, 0x93, 0x58, 0x5d, 0x67, 0x74, 0xd9, 0x17, 0xae, 0xce, 0xf8,
	0x1d, 0xf4, 0x51, 0x56, 0x2b, 0x85, 0x74, 0xdb, 0x17, 0x2d, 0xb3, 0x53, 0xb2, 0x9d, 0x6a, 0x03,
	0x2c, 0xb4, 0x53, 0x32, 0x89, 0x32, 0xf0, 0x42, 0x27, 0xbe, 0x12, 0x84, 0xf9, 0x33, 0x0c, 0x4c,
	0x69, 0xbb, 0xd5, 0xc1, 0x28, 0x74, 0xe2, 0xcb, 0x97, 0xdb, 0x71, 0xb3, 0x84, 0xb9, 0x49, 0x16,
	0x8d, 0x21, 0xba, 0x13, 0xd1, 0x9f, 0x03, 0x70, 0xd4, 0xf9, 0x23, 0x40, 0xa5, 0xb0, 0xda, 0xbf,
	0xeb, 0x5c, 0x23, 0x7d, 0xd1, 0x50, 0x9c, 0x28, 0xd6, 0xcf, 0x75, 0x31, 0x95, 0xe9, 0x66, 0xb1,
	0x5c, 0xb6, 0xdd, 0x4e, 0x14, 0xf2, 0xe5, 0x4f, 0xe7, 0xb3, 0xd6, 0x3f, 0x28, 0xfc, 0x1e, 0x2e,
	0xe4, 0x4a, 0x35, 0xe9, 0x1e, 0xb9, 0x07, 0x1e, 0x49, 0xe8, 0xbd, 0x7d, 0xab, 0x02, 0xcf, 0xd6,
	0xd1, 0xd6, 0x76, 0x8f, 0xb5, 0x03, 0x18, 0x48, 0x44, 0x95, 0x97, 0x48, 0x33, 0x86, 0xa2, 0xa3,
	0xfc, 0x01, 0xd8, 0xa7, 0x49, 0x82, 0x6b, 0x2a, 0x0e, 0xc7, 0xe2, 0xc2, 0xca, 0x49, 0x9f, 0xfe,
	0x83, 0xd7, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe2, 0xea, 0x16, 0xd5, 0x35, 0x02, 0x00, 0x00,
}
